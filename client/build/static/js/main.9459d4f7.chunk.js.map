{"version":3,"sources":["components/progress-bar.js","components/progress-bar-loader.js","components/device-location.js","App.js","index.js"],"names":["ProgressBar","props","classes","makeStyles","theme","containerStyles","height","width","marginTop","minWidth","fillerStyles","completed","background","borderRadius","textAlign","transition","labelStyles","paddingLeft","paddingRight","color","marginLeft","marginRight","spacing","marginBottom","paddingTop","useStyles","className","Typography","variant","gutterBottom","ProgressBarLoader","useState","js","setJS","intervalIDJS","setIntervalIDJS","reactJS","setReactJS","intervalIDReactJS","setIntervalIDReactJS","maxBarsWidth","Math","max","title","fontSize","link","cursor","textDecoration","progressBarContainer","innerContainer","useEffect","setInterval","prevValue","clearInterval","align","Grid","container","direction","justify","alignItems","item","xs","Link","onClick","window","open","DeviceLocation","coordinates","setCoordinates","inlinePaper","display","margin","dataTitle","navigator","geolocation","watchPosition","geoData","coords","err","console","warn","message","Paper","square","Tooltip","placement","code","latitude","longitude","accuracy","altitude","altitudeAccuracy","heading","speed","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","type","default","root","fontFamily","padding","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"2MAiDeA,EA7CK,SAACC,GAEjB,IAgCMC,EAhCYC,aAAW,SAACC,GAAD,MAAY,CACrCC,gBAAiB,CACbC,OAAQ,OACRC,MAAO,OACPC,UAAWP,EAAMO,UACjB,4BAA6B,CACzBC,SAAU,SAOlBC,aAAc,CACVH,MAAON,EAAMU,UAAY,IACzBC,WAAY,uDACZC,aAAc,OACdC,UAAW,QACXC,WAAY,wBAEhBC,YAAa,CACTC,YAAa,OACbC,aAAc,OACdC,MAAO,OACPX,UAAW,EACXY,WAAY,EACZC,YAAajB,EAAMkB,QAAQ,GAC3BC,aAAc,EACdC,WAAY,UAIJC,GAEhB,OACI,qBAAKC,UAAWxB,EAAQG,gBAAxB,SACI,qBAAKqB,UAAWxB,EAAQQ,aAAxB,SACI,eAACiB,EAAA,EAAD,CAAYD,UAAWxB,EAAQc,YAAaY,QAAQ,QAAQC,cAAY,EAAxE,UAA0E5B,EAAMU,UAAhF,Y,QCwCDmB,EA5EW,WAAM,MAIRC,mBAAS,IAJD,mBAIrBC,EAJqB,KAIjBC,EAJiB,OAKYF,oBAAS,GALrB,mBAKrBG,EALqB,KAKPC,EALO,OAOEJ,mBAAS,IAPX,mBAOrBK,EAPqB,KAOZC,EAPY,OAQsBN,oBAAS,GAR/B,mBAQrBO,EARqB,KAQFC,EARE,KActBC,EAAgBC,KAAKC,IAAIV,EAAII,GAAW,IA0BxClC,EAxBYC,aAAW,SAACC,GAAD,MAAY,CACrCuC,MAAO,CACHpB,aAAcnB,EAAMkB,QAAQ,GAC5B,4BAA6B,CACzBsB,SAAU,SAGlBC,KAAM,CACFC,OAAQ,UACRC,eAAgB,YAChBH,SAAU,WAEdI,qBAAsB,CAKlBzC,MAAO,OAEX0C,eAAgB,CACZ1C,MAAOiC,MAICf,GAgBhB,OAXAyB,qBAAU,WACNf,EAAgBgB,aAAY,kBAAMlB,GAAM,SAAAmB,GAAS,OAAIA,EAAY,OAAI,IACrEb,EAAqBY,aAAY,kBAAMd,GAAW,SAAAe,GAAS,OAAIA,EAAY,OAAI,MAChF,IAKK,MAAPpB,GAAeqB,cAAcnB,GACjB,KAAZE,GAAmBiB,cAAcf,GAG9B,qCACI,cAACX,EAAA,EAAD,CAAYD,UAAWxB,EAAQyC,MAAOW,MAAM,SAAS1B,QAAQ,KAAKC,cAAY,EAA9E,iGACA,cAAC0B,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,aACXjC,UAAWxB,EAAQ8C,qBALvB,SAOI,eAACO,EAAA,EAAD,CAAM7B,UAAWxB,EAAQ+C,eAAgBW,MAAI,EAACC,GAAI,GAAlD,UACI,cAAC,EAAD,CAAalD,UAAWqB,EAAIxB,UAAW,IACvC,cAAC,EAAD,CAAaG,UAAWyB,EAAS5B,UAAW,SAFhD,SAKJ,eAACmB,EAAA,EAAD,CAAYC,QAAQ,UAAUT,MAAM,gBAAgBU,cAAY,EAAhE,0CAA8F,cAACiC,EAAA,EAAD,CAAMpC,UAAWxB,EAAQ2C,KAAM1B,MAAM,cAAc4C,QAAS,kBAAMC,OAAOC,KAAK,+CAAgD,SAAU,eAAerC,QAAQ,QAA/J,kBAA9F,W,gCCYGsC,EAnFQ,WAAO,IAAD,EACanC,oBAAS,GADtB,mBAClBoC,EADkB,KACLC,EADK,KA8BnBlE,EA3BYC,aAAW,SAACC,GAAD,MAAY,CACrCyC,KAAM,CACFC,OAAQ,UACRC,eAAgB,aAEpBJ,MAAO,CACHnC,UAAWJ,EAAMkB,QAAQ,GACzBC,aAAcnB,EAAMkB,QAAQ,GAC5B,4BAA6B,CACzBsB,SAAU,SAGlByB,YAAa,CACTC,QAAS,SACT/D,MAAO,OACPU,YAAab,EAAMkB,QAAQ,GAC3BJ,aAAcd,EAAMkB,QAAQ,IAEhCiD,OAAQ,CACJ/D,UAAWJ,EAAMkB,QAAQ,GACzBC,aAAcnB,EAAMkB,QAAQ,IAEhCkD,UAAW,CACPzB,eAAgB,gBAIRtB,GAUhB,OARAyB,qBAAU,WACNuB,UAAUC,YAAYC,eAAc,SAACC,GACjCR,EAAeQ,EAAQC,WACxB,SAACC,GACAC,QAAQC,KAAKF,EAAIG,SACjBb,EAAeU,QAEpB,IAEC,qCACI,cAACnD,EAAA,EAAD,CAAYD,UAAWxB,EAAQyC,MAAOf,QAAQ,KAAK0B,MAAM,SAASzB,cAAY,EAA9E,sDACA,sBAAKH,UAAWxB,EAAQqE,OAAxB,UACI,cAAC5C,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,+CAAuG,cAACqD,EAAA,EAAD,CAAOxD,UAAWxB,EAAQmE,YAAazC,QAAQ,WAAWuD,QAAM,EAAhE,sBAAiF,cAACxD,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,+CAAwG,cAACqD,EAAA,EAAD,CAAOxD,UAAWxB,EAAQmE,YAAazC,QAAQ,WAAWuD,QAAM,EAAhE,6CAAwG,cAACxD,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,0CACxY,eAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,uCAAmE,cAACuD,EAAA,EAAD,CAASzC,MAAM,sBAAsB0C,UAAU,YAA/C,SAA2D,cAACvB,EAAA,EAAD,CAAMpC,UAAWxB,EAAQ2C,KAAM1B,MAAM,cAAc4C,QAAS,kBAAMC,OAAOC,KAAK,2FAA4F,SAAU,eAAerC,QAAQ,QAA3M,oBAA9H,uBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,yGAEJ,sBAAKH,UAAWxB,EAAQqE,OAAxB,UACI,cAAC5C,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,oGAA6J,cAACqD,EAAA,EAAD,CAAOxD,UAAWxB,EAAQmE,YAAazC,QAAQ,WAAWuD,QAAM,EAAhE,qDAAgH,cAACxD,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,eAC7Q,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,6FAEJ,sBAAKH,UAAWxB,EAAQqE,OAAxB,UACI,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,0FACA,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,wDAEHsC,EAAYmB,KAAO,cAAC3D,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAAxC,SAA0CsC,EAAYc,UAAwB,gCAC9F,gCACI,cAACtD,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,4BADJ,IACwH,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAYoB,SAAWpB,EAAYoB,SAAW,wCAEjO,gCACI,cAAC5D,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,6BADJ,IACyH,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAYqB,UAAYrB,EAAYqB,UAAY,wCAEpO,gCACI,cAAC7D,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,8CADJ,IAC0I,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAYsB,SAAWtB,EAAYsB,SAAW,KAAO,wCAE1P,gCACI,cAAC9D,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,4BADJ,IACwH,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAYuB,SAAWvB,EAAYuB,SAAW,wCAEjO,gCACI,cAAC/D,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,gCADJ,IAC4H,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAYwB,iBAAmBxB,EAAYwB,iBAAmB,wCAErP,gCACI,cAAChE,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,2BADJ,IACuH,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAYyB,QAAUzB,EAAYyB,QAAU,wCAE9N,gCACI,cAACjE,EAAA,EAAD,CAAY2C,QAAQ,SAAS5C,UAAWxB,EAAQsE,UAAW5C,QAAQ,QAAQC,cAAY,EAAvF,yBADJ,IACqH,cAACF,EAAA,EAAD,CAAY2C,QAAQ,SAAS1C,QAAQ,QAAQC,cAAY,EAAzD,SAA2DsC,EAAY0B,MAAQ1B,EAAY0B,MAAQ,+CCpCzNC,EAvCH,WACV,IAAMC,EAAkBC,YAAc,gCAEhC5F,EAAQ6F,mBACZ,kBACEC,YAAe,CACbC,QAAS,CACPC,KAAML,EAAkB,OAAS,QACjCnF,WAAY,CACVyF,QAASN,EAAkB,OAAS,aAI5C,CAACA,IAaG7F,EARYC,aAAW,SAACC,GAAD,MAAY,CACvCkG,KAAM,CACJC,WAAY,SACZhG,MAAO,OACPiG,QAASpG,EAAMkB,QAAQ,OAIXG,GAEhB,OACE,eAACgF,EAAA,EAAD,CAAerG,MAAOA,EAAtB,UACE,cAACsG,EAAA,EAAD,IACA,sBAAKhF,UAAWxB,EAAQoG,KAAxB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCrCRK,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9459d4f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ProgressBar = (props) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        containerStyles: {\r\n            height: '100%',\r\n            width: 'auto',\r\n            marginTop: props.marginTop,\r\n            '@media (max-width:1024px)': {\r\n                minWidth: \"500%\",\r\n            }\r\n\r\n            // // Optional\r\n            // backgroundColor: \"#e0e0de\",\r\n            // borderRadius: 50,\r\n        },\r\n        fillerStyles: {\r\n            width: props.completed + '%',\r\n            background: \"linear-gradient(to right, #0f0c29, #302b63, #24243e)\",\r\n            borderRadius: '15px',\r\n            textAlign: 'right',\r\n            transition: 'width 1s ease-in-out'\r\n        },\r\n        labelStyles: {\r\n            paddingLeft: 'auto',\r\n            paddingRight: 'auto',\r\n            color: \"#fff\",\r\n            marginTop: 0,\r\n            marginLeft: 0,\r\n            marginRight: theme.spacing(1),\r\n            marginBottom: 0,\r\n            paddingTop: '1px'\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.containerStyles}>\r\n            <div className={classes.fillerStyles}>\r\n                <Typography className={classes.labelStyles} variant=\"body1\" gutterBottom>{props.completed}%</Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProgressBar from './progress-bar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst ProgressBarLoader = () => {\r\n\r\n    // Change the names according to what the bars represent.\r\n\r\n    const [js, setJS] = useState(30); // Count percent.\r\n    const [intervalIDJS, setIntervalIDJS] = useState(false); // ID for setting\\clearing the count interval.\r\n\r\n    const [reactJS, setReactJS] = useState(30); // Count percent.\r\n    const [intervalIDReactJS, setIntervalIDReactJS] = useState(false); // ID for setting\\clearing the count interval.\r\n\r\n\r\n    // Optional: Add also here the names of what the bars represent.\r\n    // It's for the containers to adjust automatically to the bars length.\r\n\r\n    const maxBarsWidth = (Math.max(js, reactJS) + '%');\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        title: {\r\n            marginBottom: theme.spacing(3),\r\n            '@media (max-width:1024px)': {\r\n                fontSize: \"1rem\"\r\n            }\r\n        },\r\n        link: {\r\n            cursor: \"pointer\",\r\n            textDecoration: \"underline\",\r\n            fontSize: \"0.75rem\"\r\n        },\r\n        progressBarContainer: {\r\n\r\n            // Change this to scale the bars' width.\r\n            // Caution: Placing 'maxBarsWidth' here may result in the bars exceeding the display.\r\n\r\n            width: '10%'\r\n        },\r\n        innerContainer: {\r\n            width: maxBarsWidth\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    // Will run once on component load.\r\n\r\n    useEffect(() => {\r\n        setIntervalIDJS(setInterval(() => setJS(prevValue => prevValue + 1), 1));\r\n        setIntervalIDReactJS(setInterval(() => setReactJS(prevValue => prevValue + 1), 1));\r\n    }, []);\r\n\r\n\r\n    // At which percent to stop the count (clearInterval()).\r\n\r\n    (js === 110) && clearInterval(intervalIDJS);\r\n    (reactJS === 90) && clearInterval(intervalIDReactJS);\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.title} align=\"center\" variant=\"h6\" gutterBottom>Snippet no. 1: Fork and adjust generic progress bars, to add progressing percentage</Typography>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                className={classes.progressBarContainer}\r\n            >\r\n                <Grid className={classes.innerContainer} item xs={12}>\r\n                    <ProgressBar completed={js} marginTop={0} />\r\n                    <ProgressBar completed={reactJS} marginTop={'16px'} /> {/* 16px is based on Material-UI's 8px scaling factor. */}\r\n                </Grid>\r\n            </Grid>\r\n            <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>The forked repo is available <Link className={classes.link} color=\"textPrimary\" onClick={() => window.open(\"https://github.com/O-K-G/simple-progress-bar\", \"_blank\", \"noreferrer\")} variant=\"body1\">here</Link>.</Typography>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProgressBarLoader;","import React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\n\nconst DeviceLocation = () => {\n    const [coordinates, setCoordinates] = useState(false);\n\n    const useStyles = makeStyles((theme) => ({\n        link: {\n            cursor: \"pointer\",\n            textDecoration: \"underline\"\n        },\n        title: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3),\n            '@media (max-width:1024px)': {\n                fontSize: \"1rem\"\n            }\n        },\n        inlinePaper: {\n            display: \"inline\",\n            width: \"auto\",\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1)\n        },\n        margin: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3)\n        },\n        dataTitle: {\n            textDecoration: \"underline\"\n        }\n    }));\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        navigator.geolocation.watchPosition((geoData) => {\n            setCoordinates(geoData.coords);\n        }, (err) => {\n            console.warn(err.message);\n            setCoordinates(err);\n        });\n    }, []);\n    return (\n        <>\n            <Typography className={classes.title} variant=\"h6\" align=\"center\" gutterBottom>Snippet no. 2: Getting a user's location</Typography>\n            <div className={classes.margin}>\n                <Typography display=\"inline\" variant=\"body1\" gutterBottom>In Node.js\\Express, you can use </Typography><Paper className={classes.inlinePaper} variant=\"outlined\" square>'req.ip'</Paper><Typography display=\"inline\" variant=\"body1\" gutterBottom> (may be a proxy IP instead), or </Typography><Paper className={classes.inlinePaper} variant=\"outlined\" square>'req.header('x-forwarded-for')'</Paper><Typography display=\"inline\" variant=\"body1\" gutterBottom> to get a user's IP address.</Typography>\n                <Typography variant=\"body1\" gutterBottom>You can see an exmaple in <Tooltip title=\"polykick.com GitHub\" placement=\"top-start\"><Link className={classes.link} color=\"textPrimary\" onClick={() => window.open(\"https://github.com/O-K-G/polykick/blob/main/server/src/components/routes/fetchCountry.js\", \"_blank\", \"noreferrer\")} variant=\"body1\">this</Link></Tooltip> project of mine.</Typography>\n                <Typography variant=\"body1\" gutterBottom>Then, using a third party package or API service, you can get some non-accurate geodata.</Typography>\n            </div>\n            <div className={classes.margin}>\n                <Typography display=\"inline\" variant=\"body1\" gutterBottom>The other option is to get the device location (using GPS, etc'... if available) with </Typography><Paper className={classes.inlinePaper} variant=\"outlined\" square>'navigator.geolocation.watchPosition()'</Paper><Typography display=\"inline\" variant=\"body1\" gutterBottom>.</Typography>\n                <Typography variant=\"body1\" gutterBottom>This is up to the user though to decide if to allow or deny location access.</Typography>\n            </div>\n            <div className={classes.margin}>\n                <Typography variant=\"body1\" gutterBottom>In this example, if you allowed access, you should see your device position.</Typography>\n                <Typography variant=\"body1\" gutterBottom>Otherwise, you'll see an error message.</Typography>\n            </div>\n            {coordinates.code ? <Typography variant=\"body1\" gutterBottom>{coordinates.message}</Typography> : <div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your latitude:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.latitude ? coordinates.latitude : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your longitude:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.longitude ? coordinates.longitude : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Latitude and longitude accuracy:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.accuracy ? coordinates.accuracy + \" m\" : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your altitude:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.altitude ? coordinates.altitude : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Altitude accuracy:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.altitudeAccuracy ? coordinates.altitudeAccuracy : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your heading:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.heading ? coordinates.heading : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your speed:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.speed ? coordinates.speed : \"No data provided from the device\"}</Typography>\n                </div>\n            </div>}\n        </>\n    );\n}\n\nexport default DeviceLocation;","import React, { useMemo } from 'react';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport \"@fontsource/roboto\";\nimport ProgressBarLoader from './components/progress-bar-loader';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DeviceLocation from './components/device-location';\n\nconst App = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          background: {\n            default: prefersDarkMode ? \"#000\" : '#fff'\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  // Basic CSS.\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      fontFamily: \"Roboto\",\n      width: '100%',\n      padding: theme.spacing(2)\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <ProgressBarLoader />\n        <DeviceLocation />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}