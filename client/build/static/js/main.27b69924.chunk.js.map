{"version":3,"sources":["components/progress-bar.js","components/progress-bar-loader.js","components/device-location.js","App.js","index.js"],"names":["ProgressBar","props","classes","makeStyles","theme","containerStyles","height","width","marginTop","fillerStyles","completed","backgroundColor","borderRadius","textAlign","transition","labelStyles","paddingLeft","paddingRight","color","marginLeft","marginRight","spacing","marginBottom","paddingTop","useStyles","className","Typography","variant","gutterBottom","ProgressBarLoader","useState","js","setJS","intervalIDJS","setIntervalIDJS","reactJS","setReactJS","intervalIDReactJS","setIntervalIDReactJS","maxBarsWidth","Math","max","margin","progressBarContainer","innerContainer","useEffect","setInterval","prevValue","clearInterval","Grid","container","direction","justify","alignItems","item","xs","DeviceLocation","coordinates","setCoordinates","link","cursor","textDecoration","dataTitle","navigator","geolocation","watchPosition","geoData","coords","err","console","warn","message","Tooltip","title","placement","Link","onClick","window","open","code","display","latitude","longitude","accuracy","altitude","altitudeAccuracy","heading","speed","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","type","background","default","root","fontFamily","padding","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27b69924.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst ProgressBar = (props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        containerStyles: {\n            height: '100%',\n            width: 'auto',\n            marginTop: props.marginTop\n\n            // // Optional\n            // backgroundColor: \"#e0e0de\",\n            // borderRadius: 50,\n        },\n        fillerStyles: {\n            width: props.completed + '%',\n            backgroundColor: '#fff',\n            borderRadius: 'inherit',\n            textAlign: 'right',\n            transition: 'width 1s ease-in-out'\n        },\n        labelStyles: {\n            paddingLeft: 'auto',\n            paddingRight: 'auto',\n            color: '#000',\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: theme.spacing(1),\n            marginBottom: 0,\n            paddingTop: '1px'\n        }\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.containerStyles}>\n            <div className={classes.fillerStyles}>\n                <Typography className={classes.labelStyles} variant=\"body1\" gutterBottom>{props.completed}%</Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProgressBar from './progress-bar';\nimport Typography from '@material-ui/core/Typography';\n\nconst ProgressBarLoader = () => {\n\n    // Change the names according to what the bars represent.\n\n    const [js, setJS] = useState(30); // Count percent.\n    const [intervalIDJS, setIntervalIDJS] = useState(false); // ID for setting\\clearing the count interval.\n\n    const [reactJS, setReactJS] = useState(30); // Count percent.\n    const [intervalIDReactJS, setIntervalIDReactJS] = useState(false); // ID for setting\\clearing the count interval.\n\n\n    // Optional: Add also here the names of what the bars represent.\n    // It's for the containers to adjust automatically to the bars length.\n\n    const maxBarsWidth = (Math.max(js, reactJS) + '%');\n\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            marginBottom: theme.spacing(3)\n        },\n        progressBarContainer: {\n\n            // Change this to scale the bars' width.\n            // Caution: Placing 'maxBarsWidth' here may result in the bars exceeding the display.\n\n            width: '10%'\n        },\n        innerContainer: {\n            width: maxBarsWidth\n        }\n    }));\n\n    const classes = useStyles();\n    \n\n    // Will run once on component load.\n\n    useEffect(() => {\n        setIntervalIDJS(setInterval(() => setJS(prevValue => prevValue + 1), 1));\n        setIntervalIDReactJS(setInterval(() => setReactJS(prevValue => prevValue + 1), 1));\n    }, []);\n\n\n    // At which percent to stop the count (clearInterval()).\n\n    (js === 110) && clearInterval(intervalIDJS);\n    (reactJS === 90) && clearInterval(intervalIDReactJS);\n\n    return (\n        <>\n        <Typography className={classes.margin} variant=\"h6\" gutterBottom>Code snippet no. 1: Fork and adjust generic progress bars, to add progressing percentage</Typography>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            className={classes.progressBarContainer}\n        >\n            <Grid className={classes.innerContainer} item xs={12}>\n                <ProgressBar completed={js} marginTop={0} />\n                <ProgressBar completed={reactJS} marginTop={'16px'} /> {/* 16px is based on Material-UI's 8px scaling factor. */}\n            </Grid>\n        </Grid>\n        </>\n    );\n}\n\nexport default ProgressBarLoader;","import React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst DeviceLocation = () => {\n    const [coordinates, setCoordinates] = useState(false);\n\n    const useStyles = makeStyles((theme) => ({\n        link: {\n            cursor: \"pointer\",\n            textDecoration: \"underline\"\n        },\n        margin: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3)\n        },\n        dataTitle: {\n            textDecoration: \"underline\"\n        }\n    }));\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        navigator.geolocation.watchPosition((geoData) => {\n            setCoordinates(geoData.coords);\n        }, (err) => {\n            console.warn(err.message);\n            setCoordinates(err);\n        });\n    }, []);\n    return (\n        <>\n            <Typography className={classes.margin} variant=\"h6\" gutterBottom>Code snippet no. 2: Getting a user's location</Typography>\n            <div className={classes.margin}>\n                <Typography variant=\"body1\" gutterBottom>In Node.js\\Express, you can use 'req.ip' (may be a proxy IP instead), or 'req.header('x-forwarded-for')' to get a user's IP address.</Typography>\n                <Typography variant=\"body1\" gutterBottom>You can see an exmaple in <Tooltip title=\"polykick.com GitHub\" placement=\"top-start\"><Link className={classes.link} color=\"textPrimary\" onClick={() => window.open(\"https://github.com/O-K-G/polykick/blob/main/server/src/components/routes/fetchCountry.js\", \"_blank\", \"noreferrer\")} variant=\"body1\">this</Link></Tooltip> project of mine.</Typography>\n                <Typography variant=\"body1\" gutterBottom>Then, using a third party package or API service, you can get some non-accurate geodata.</Typography>\n            </div>\n            <div className={classes.margin}>\n                <Typography variant=\"body1\" gutterBottom>The other option is to get the device location (using GPS, etc'... if available) with 'navigator.geolocation.watchPosition()'.</Typography>\n                <Typography variant=\"body1\" gutterBottom>This is up to the user though to decide if to allow or deny location access.</Typography>\n            </div>\n            <div className={classes.margin}>\n                <Typography variant=\"body1\" gutterBottom>In this example, if you allowed access, you should see your device position.</Typography>\n                <Typography variant=\"body1\" gutterBottom>Otherwise, you'll see an error message.</Typography>\n            </div>\n            {coordinates.code ? <Typography variant=\"body1\" gutterBottom>{coordinates.message}</Typography> : <div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your latitude:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.latitude ? coordinates.latitude : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your longitude:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.longitude ? coordinates.longitude : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Latitude and longitude accuracy:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.accuracy ? coordinates.accuracy + \" m\" : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your altitude:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.altitude ? coordinates.altitude : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Altitude accuracy:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.altitudeAccuracy ? coordinates.altitudeAccuracy : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your heading:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.heading ? coordinates.heading : \"No data provided from the device\"}</Typography>\n                </div>\n                <div>\n                    <Typography display=\"inline\" className={classes.dataTitle} variant=\"body1\" gutterBottom>Your speed:</Typography> <Typography display=\"inline\" variant=\"body1\" gutterBottom>{coordinates.speed ? coordinates.speed : \"No data provided from the device\"}</Typography>\n                </div>\n            </div>}\n        </>\n    );\n}\n\nexport default DeviceLocation;","import React, { useMemo } from 'react';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport \"@fontsource/roboto\";\nimport ProgressBarLoader from './components/progress-bar-loader';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DeviceLocation from './components/device-location';\n\nconst App = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          background: {\n            default: prefersDarkMode ? \"#000\" : '#fff'\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  // Basic CSS.\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      fontFamily: \"Roboto\",\n      width: '100%',\n      padding: theme.spacing(2)\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <ProgressBarLoader />\n        <DeviceLocation />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}